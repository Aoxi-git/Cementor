image: registry.gitlab.com/yade-dev/docker-yade

stages:
  - cmake
  - build
  - test
  - doc
  - pages

# https://docs.gitlab.com/ee/ci/yaml/#onlyexcept-basic
# I create three "stage: cmake" instructions.
# 1.1. only: master        will use -DCHUNKSIZE=1, to avoid future compilation errors caused by DCHUNKSIZE other than 1
cmake:
  stage: cmake
  only:
    - master
  script:
    - mkdir build && cd build
    - cmake -DSUFFIX=-ci -DCMAKE_VERBOSE_MAKEFILE=ON -DCHUNKSIZE=1 -DCMAKE_INSTALL_PREFIX=../install -DPYTHON_VERSION=3 -DDISABLE_SAVE_TEMPS=1 ..
  tags:
    - workingrunner
  artifacts:
    paths:
      - build


# 1.2. only: merge_request will use -DCHUNKSIZE=4, to make compilation faster by 3 minutes
cmake:
  stage: cmake
  only:
    - merge_request
  except:
    - branches
  script:
    - mkdir build && cd build
    - cmake -DSUFFIX=-ci -DCMAKE_VERBOSE_MAKEFILE=ON -DCHUNKSIZE=4 -DCMAKE_INSTALL_PREFIX=../install -DPYTHON_VERSION=3 -DDISABLE_SAVE_TEMPS=1 ..
  tags:
    - workingrunner
  artifacts:
    paths:
      - build


# 1.3. only: branches      is for on-branch work. After each commit it is compiled with options from this one. So put here anything specific that you need.
cmake:
  stage: cmake
  only:
    - branches
  except:
    - merge_request
  script:
    - mkdir build && cd build
    - cmake -DSUFFIX=-ci -DCMAKE_VERBOSE_MAKEFILE=ON -DCHUNKSIZE=4 -DCMAKE_INSTALL_PREFIX=../install -DPYTHON_VERSION=3 -DDISABLE_SAVE_TEMPS=1 ..
  tags:
    - workingrunner
  artifacts:
    paths:
      - build


# Perhaps two more will added later
# 1.4. only: tags       Perhaps creating tags would trigger a build, e.g. tagging a new release?
# 1.5. only: schedules  For scheluded pipelines. Perhaps it will be e.g. for https://gitlab.com/yade-dev/trunk/issues/58
#                       It is possible to send an environment variable to the pipeline from the schedule. So here maybe a selection of
#                       what .deb package to build could be performed using an env variable.


# 2. build stage
make:
  stage: build
  only:
    - master
    - merge_request
    - branches
  script:
    - export JOBSNUM=$(case $CI_RUNNER_DESCRIPTION in 
        "y_4pak_64cpu_256RAM_4TB_docker") echo "43" ;; 
        "c_4pak_64cpu_256RAM_4TB_docker") echo "43" ;; 
        "y_6pak_48cpu_128RAM_4TB_docker") echo "45" ;; 
        "c_6pak_48cpu_128RAM_4TB_docker") echo "45" ;; 
        "y_7pak_48cpu_128RAM_1TB_docker") echo "45" ;; 
        "c_7pak_48cpu_128RAM_1TB_docker") echo "45" ;; 
        "yade-runner") echo "12" ;; 
        "yade-runner-01") echo "1" ;; 
        *) echo "8";;
        esac)
    - echo $JOBSNUM
    - cd build
    - make -j $JOBSNUM
    - make install
    - make clean
  artifacts:
    paths:
      - install
  tags:
    - fast
    - workingrunner
  dependencies:
    - cmake


# 3.1. test stage
test:
  stage: test
  only:
    - master
    - merge_request
    - branches
  script:
    - install/bin/yade-ci --test
  tags:
    - workingrunner
  dependencies:
    - make


# 3.2. check stage
check:
  stage: test
  only:
    - master
    - merge_request
    - branches
  script:
    - install/bin/yade-ci --checks
  tags:
    - workingrunner
  dependencies:
    - make


# 4. doc stage
doc:
  stage: doc
  only:
    - master
    - merge_request
  script:
    - cd build
    - xvfb-run -s "-screen 0 1600x1200x24" make doc
  tags:
    - workingrunner
  dependencies:
    - cmake
    - make
  artifacts:
    paths:
      - install


# 5. pages stage; uploads documentation to the website
pages:
  stage: pages
  only:
    - master
  script:
    - mv install/share/doc/yade-ci/html public
    - mv install/share/doc/yade-ci/Yade.pdf public
    - mv install/share/doc/yade-ci/Yade.epub public
  tags:
    - workingrunner
  dependencies:
    - doc
  artifacts:
    paths:
      - public

